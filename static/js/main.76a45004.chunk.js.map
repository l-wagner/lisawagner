{"version":3,"sources":["lisa2020.jpeg","logo.svg","cvicon.png","wagner_cv_19.pdf","About.js","Header.js","Solutions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","backgroundColor","flexGrow","paper","width","paddingBottom","spacing","textAlign","img","objectFit","objectPosition","height","borderTopLeftRadius","borderTopRightRadius","links","marginTop","cv","fontWeight","About","classes","className","Grid","container","direction","justify","alignItems","item","xs","sm","Paper","elevation","src","ButtonGroup","color","size","aria-label","Button","target","href","Icon","require","download","flexDirection","flexWrap","justifyContent","paddingRight","marginBottom","title","display","palette","secondary","dark","Header","path","useLocation","pathname","AppBar","position","Tabs","value","indicatorColor","Tab","label","to","component","Link","Typography","variant","Solutions","createMuiTheme","typography","useNextVariants","primary","logo","light","main","amber","blueGrey","textSecondary","App","React","useEffect","node","loadCSS","document","querySelector","parentNode","removeChild","basename","process","window","location","render","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.76a45004.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lisa2020.52bcacae.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/cvicon.67be94fa.png\";","module.exports = __webpack_public_path__ + \"static/media/wagner_cv_19.efef3044.pdf\";","import React from 'react';\nimport { Grid, Paper, ButtonGroup, Button, Icon, Link, makeStyles } from '@material-ui/core';\n\nimport img from './lisa2020.jpeg';\nimport cvicon from './cvicon.png';\n\nfunction About() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3} direction='row' justify='center' alignItems='center'>\n                <Grid item xs={12} sm={4}>\n                    <Paper className={classes.paper} elevation={3}>\n                        <img className={classes.img} src={img} />\n                        <div className={classes.links}>\n                            <ButtonGroup color='secondary' size='medium' aria-label='small outlined primary button group'>\n                                <Button target='_blank' href='https://github.com/l-wagner'>\n                                    <Icon className='fab fa-github' />\n                                </Button>\n                                <Button target='_blank' href='https://www.linkedin.com/in/lisa-wagner-62469296/'>\n                                    <Icon className='fab fa-linkedin-in' />\n                                </Button>\n                                <Button href={require(\"./wagner_cv_19.pdf\")} download=\"LisaWagner_CV\">\n                                    <span className={classes.cv}>CV</span>\n                                </Button>\n                                <Button href='mailto:lisa.wagner91@gmail.com'>\n                                    <Icon className='fa fa-envelope' />\n                                </Button>\n                            </ButtonGroup>\n                        </div>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: 'white',\n        flexGrow: 1,\n    },\n    paper: {\n        width: '100%',\n        // height: '100vh',\n        paddingBottom: theme.spacing(5),\n        textAlign: 'center',\n    },\n    img: {\n        objectFit: 'cover',\n        objectPosition: '50% 50%',\n        width: '100%',\n        height: '40%',\n        borderTopLeftRadius: '5px',\n        borderTopRightRadius: '5px',\n    },\n    links: {\n        marginTop: theme.spacing(3),\n    },\n    cv: {\n        fontWeight: 'bolder',\n    },\n}));\n\nexport default About;\n","import React from 'react';\nimport { AppBar, Tab, Tabs, Typography, makeStyles } from '@material-ui/core';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction Header() {\n    const classes = useStyles();\n    const path = useLocation().pathname;\n    return (\n        <AppBar className={classes.container} position='static' color='transparent'>\n            <Tabs value={path} indicatorColor='secondary'>\n                <Tab label='solutions' value='/solutions' to='/solutions' component={Link} />\n                <Tab label='about' value='/about' component={Link} to='/about' />\n            </Tabs>\n\n            <Typography className={classes.title}  variant='h5'>\n                lisawagner.io\n                {useLocation().pathname}\n            </Typography>\n        </AppBar>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        paddingRight: theme.spacing(5),\n        marginBottom: theme.spacing(5),\n    },\n    title: {\n        display: 'inline-flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        color: theme.palette.secondary.dark,\n    },\n}));\n\nexport default Header;\n","import React from 'react';\nimport {makeStyles } from '@material-ui/core';\n\n// import logo from './logo.png';\n\nfunction Solutions() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>Solutions to be added.</div>\n        //{' '}\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        backgroundColor: 'white',\n        width: '100vw',\n        height: '100vh',\n    },\n\n   \n}));\n\nexport default Solutions;\n","import React from 'react';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { amber, blue, blueGrey } from '@material-ui/core/colors/';\nimport { loadCSS } from 'fg-loadcss';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport About from './About';\nimport Header from './Header';\nimport Solutions from './Solutions';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n    palette: {\n        primary: {\n            logo: '#319ae8',\n            light: '#8FC7E8',\n            main: '#007CBA',\n            dark: '#E0E0E0',\n        },\n        secondary: {\n            light: '#F6C65B',\n            main: amber[400],\n            dark: blueGrey[600],\n        },\n\n        textSecondary: '#e0e0e0',\n    },\n});\n\nfunction App() {\n    React.useEffect(() => {\n        const node = loadCSS('https://use.fontawesome.com/releases/v5.12.0/css/all.css', document.querySelector('#font-awesome-css'));\n\n        return () => {\n            node.parentNode.removeChild(node);\n        };\n    }, []);\n\n    return (\n        <MuiThemeProvider theme={theme}>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Header path={window.location.pathname} />\n                <Route path='/(solutions|)' render={() => <Solutions />} />\n                <Route path='/about' render={() => <About />} />\n            </Router>\n        </MuiThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}